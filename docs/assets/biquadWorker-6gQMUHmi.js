var C=Object.defineProperty;var F=(R,w,p)=>w in R?C(R,w,{enumerable:!0,configurable:!0,writable:!0,value:p}):R[w]=p;var _=(R,w,p)=>F(R,typeof w!="symbol"?w+"":w,p);(function(){"use strict";function R(l,s){const n=l.length;if(n!=s.length)throw new RangeError("Mismatched lengths");n!=0&&(n&n-1?A(l,s):p(l,s))}function w(l,s){R(s,l)}function p(l,s){const n=l.length;if(n!=s.length)throw new RangeError("Mismatched lengths");if(n==1)return;let e=-1;for(let t=0;t<32;t++)1<<t==n&&(e=t);if(e==-1)throw new RangeError("Length is not a power of 2");const h=new Array(n/2),g=new Array(n/2);for(let t=0;t<n/2;t++)h[t]=Math.cos(2*Math.PI*t/n),g[t]=Math.sin(2*Math.PI*t/n);for(let t=0;t<n;t++){const o=M(t,e);if(o>t){let a=l[t];l[t]=l[o],l[o]=a,a=s[t],s[t]=s[o],s[o]=a}}for(let t=2;t<=n;t*=2){const o=t/2,a=n/t;for(let c=0;c<n;c+=t)for(let r=c,u=0;r<c+o;r++,u+=a){const q=r+o,L=l[q]*h[u]+s[q]*g[u],y=-l[q]*g[u]+s[q]*h[u];l[q]=l[r]-L,s[q]=s[r]-y,l[r]+=L,s[r]+=y}}function M(t,o){let a=0;for(let c=0;c<o;c++)a=a<<1|t&1,t>>>=1;return a}}function A(l,s){const n=l.length;if(n!=s.length)throw new RangeError("Mismatched lengths");let e=1;for(;e<n*2+1;)e*=2;const h=new Array(n),g=new Array(n);for(let u=0;u<n;u++){const q=u*u%(n*2);h[u]=Math.cos(Math.PI*q/n),g[u]=Math.sin(Math.PI*q/n)}const M=d(e),t=d(e);for(let u=0;u<n;u++)M[u]=l[u]*h[u]+s[u]*g[u],t[u]=-l[u]*g[u]+s[u]*h[u];const o=d(e),a=d(e);o[0]=h[0],a[0]=g[0];for(let u=1;u<n;u++)o[u]=o[e-u]=h[u],a[u]=a[e-u]=g[u];const c=new Array(e),r=new Array(e);T(M,t,o,a,c,r);for(let u=0;u<n;u++)l[u]=c[u]*h[u]+r[u]*g[u],s[u]=-c[u]*g[u]+r[u]*h[u]}function T(l,s,n,e,h,g){const M=l.length;if(M!=s.length||M!=n.length||M!=e.length||M!=h.length||M!=g.length)throw new RangeError("Mismatched lengths");l=l.slice(),s=s.slice(),n=n.slice(),e=e.slice(),R(l,s),R(n,e);for(let t=0;t<M;t++){const o=l[t]*n[t]-s[t]*e[t];s[t]=s[t]*n[t]+l[t]*e[t],l[t]=o}w(l,s);for(let t=0;t<M;t++)h[t]=l[t]/M,g[t]=s[t]/M}function d(l){const s=[];for(let n=0;n<l;n++)s.push(0);return s}class i{constructor(s){_(this,"_coefficients",new Float64Array(6));_(this,"_normalizedCoefficients",new Float64Array(5));_(this,"_impluseResponse");_(this,"_real");_(this,"_imag");_(this,"_phaseResponse");_(this,"_frequencyResponse");this.impulseLength=s,this._impluseResponse=new Float64Array(this.impulseLength),this._real=new Float64Array(this.impulseLength),this._imag=new Float64Array(this.impulseLength),this._phaseResponse=new Float64Array(this.impulseLength/2),this._frequencyResponse=new Float64Array(this.impulseLength/2)}setFilter(s,n,e,h){i[s](this._coefficients,n,e,h),i.normalizeCoefficients(this._coefficients,this._normalizedCoefficients),i.calcImpulseResponse(this._impluseResponse,this._normalizedCoefficients)}transform(){for(let s=0;s<this.impulseLength;s++)this._real[s]=this._impluseResponse[s],this._imag[s]=0;R(this._real,this._imag);for(let s=0;s<this.impulseLength/2;s++)this._phaseResponse[s]=Math.atan2(this._imag[s],this._real[s])*180/Math.PI,this._frequencyResponse[s]=Math.log10(Math.sqrt(this._real[s]*this._real[s]+this._imag[s]*this._imag[s]))*20}get coefficients(){return this._coefficients}get normalizedCoefficients(){return this._normalizedCoefficients}get impluseResponse(){return this._impluseResponse}get phaseResponse(){return this._phaseResponse}get frequencyResponse(){return this._frequencyResponse}static normalizeCoefficients(s,n){const e=n??new Float64Array(5);return e[0]=s[0]/s[3],e[1]=s[1]/s[3],e[2]=s[2]/s[3],e[3]=-s[4]/s[3],e[4]=-s[5]/s[3],e}static calcImpulseResponse(s,n){if(n.length!==5)throw new Error("Coefficients must to be normalized.");let[e,h,g,M,t]=[0,0,1,0,0];for(let o=0;o<s.length;o++)s[o]=n[0]*g+n[1]*M+n[2]*t+n[3]*e+n[4]*h,t=M,M=g,h=e,e=s[o],g=0}static calcOmega(s,n){return 2*Math.PI*n/s}static lowpass(s,n,e,h){const g=(h==null?void 0:h.q)??Math.SQRT1_2,M=i.calcOmega(n,e),t=Math.sin(M)/(2*g);return s[0]=(1-Math.cos(M))/2,s[1]=1-Math.cos(M),s[2]=(1-Math.cos(M))/2,s[3]=1+t,s[4]=-2*Math.cos(M),s[5]=1-t,s}static highpass(s,n,e,h){const g=(h==null?void 0:h.q)??Math.SQRT1_2,M=i.calcOmega(n,e),t=Math.sin(M)/(2*g);return s[0]=(1+Math.cos(M))/2,s[1]=-(1+Math.cos(M)),s[2]=(1+Math.cos(M))/2,s[3]=1+t,s[4]=-2*Math.cos(M),s[5]=1-t,s}static bandpass(s,n,e,h){const g=(h==null?void 0:h.q)??Math.SQRT1_2,M=i.calcOmega(n,e),t=Math.sin(M)/(2*g);return s[0]=t,s[1]=0,s[2]=-t,s[3]=1+t,s[4]=-2*Math.cos(M),s[5]=1-t,s}static bandstop(s,n,e,h){const g=(h==null?void 0:h.q)??Math.SQRT1_2,M=i.calcOmega(n,e),t=Math.sin(M)/(2*g);return s[0]=1,s[1]=-2*Math.cos(M),s[2]=1,s[3]=1+t,s[4]=-2*Math.cos(M),s[5]=1-t,s}static lowshelf(s,n,e,h){const g=(h==null?void 0:h.gain)??0,M=(h==null?void 0:h.q)??Math.SQRT1_2,t=i.calcOmega(n,e),o=Math.pow(10,g/40),a=Math.sqrt(o)/M;return s[0]=o*(o+1-(o-1)*Math.cos(t)+a*Math.sin(t)),s[1]=2*o*(o-1-(o+1)*Math.cos(t)),s[2]=o*(o+1-(o-1)*Math.cos(t)-a*Math.sin(t)),s[3]=o+1+(o-1)*Math.cos(t)+a*Math.sin(t),s[4]=-2*(o-1+(o+1)*Math.cos(t)),s[5]=o+1+(o-1)*Math.cos(t)-a*Math.sin(t),s}static highshelf(s,n,e,h){const g=(h==null?void 0:h.gain)??0,M=(h==null?void 0:h.q)??Math.SQRT1_2,t=i.calcOmega(n,e),o=Math.pow(10,g/40),a=Math.sqrt(o)/M;return s[0]=o*(o+1+(o-1)*Math.cos(t)+a*Math.sin(t)),s[1]=-2*o*(o-1+(o+1)*Math.cos(t)),s[2]=o*(o+1+(o-1)*Math.cos(t)-a*Math.sin(t)),s[3]=o+1-(o-1)*Math.cos(t)+a*Math.sin(t),s[4]=2*(o-1-(o+1)*Math.cos(t)),s[5]=o+1-(o-1)*Math.cos(t)-a*Math.sin(t),s}static peaking(s,n,e,h){const g=(h==null?void 0:h.gain)??0,M=(h==null?void 0:h.q)??Math.SQRT1_2,t=i.calcOmega(n,e),o=Math.sin(t)/(2*M),a=Math.pow(10,g/40);return s[0]=1+o*a,s[1]=-2*Math.cos(t),s[2]=1-o*a,s[3]=1+o/a,s[4]=-2*Math.cos(t),s[5]=1-o/a,s}static allpass(s,n,e,h){const g=(h==null?void 0:h.q)??Math.SQRT1_2,M=i.calcOmega(n,e),t=Math.sin(M)/(2*g);return s[0]=1-t,s[1]=-2*Math.cos(M),s[2]=1+t,s[3]=1+t,s[4]=-2*Math.cos(M),s[5]=1-t,s}}function I(l){let s=-1/0,n=1/0,e=-1,h=-1,g=0;for(const M of l)M>s&&(s=M,e=g),M<n&&(n=M,h=g),g++;return{max:s,min:n,maxIndex:e,minIndex:h}}self.addEventListener("message",l=>{console.info(`[biquadWorker] start impulseLength: ${l.data.impulseLength}`);const s=b(l.data);console.info(`[biquadWorker] finish impulseLength: ${l.data.impulseLength}`),self.postMessage(s)});function b(l){const s=new i(l.impulseLength);s.setFilter(l.filterType,l.samplingFreq,l.cutoffFreq,{q:l.q,gain:l.gain}),s.transform();const n=I(s.frequencyResponse);return{magnitudeOnCutoff:(s.frequencyResponse[Math.floor(l.cutoffFreq/l.samplingFreq*l.impulseLength)]+s.frequencyResponse[Math.floor(l.cutoffFreq/l.samplingFreq*l.impulseLength+1)])/2,maxMagnitude:n.max,minMagnitude:n.min,maxMagnitudeFrequency:l.samplingFreq/l.impulseLength*n.maxIndex,minMagnitudeFrequency:l.samplingFreq/l.impulseLength*n.minIndex,sumImpulse:s.impluseResponse.reduce((e,h)=>e+h,0)}}})();
