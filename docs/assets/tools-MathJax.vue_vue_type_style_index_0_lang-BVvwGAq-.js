import{a as f}from"./tools-index-DzQz_ZeU.js";import{d as v,X as h,j as s,m,k as w,n as x,o as k,c as p,w as y,u as i,A as g,h as M,q as b,a as C}from"./tools-ToolAppBase.vue_vue_type_script_setup_true_lang-Btv-3mZf.js";const J=v({__name:"MathJax",props:h({tag:null,node:{type:Boolean},block:{type:Boolean},overlook:{type:Boolean}},{tag:"span"}),setup(a,{expose:u}){const c=a.tag;"MathJax"in window||console.warn("window.MathJax does not exist. For typesetting, MathJax import is required.");const t=s(),e=s(),d=m(()=>a.block?"div":"span");async function l(){e.value&&(await g(),r(),await window.MathJax.typesetPromise([e.value]))}function r(){if(!(!t.value||!e.value))if(t.value.children.length===0&&!a.node)a.block?e.value.innerText=`$$ ${t.value.innerText} $$`:e.value.innerText=`\\( ${t.value.innerText} \\)`;else{for(;e.value.lastElementChild;)e.value.removeChild(e.value.lastElementChild);for(const n of t.value.childNodes)e.value.appendChild(n.cloneNode(!0))}}async function o(){a.overlook?e.value&&(window.MathJax.typesetClear([e.value]),r()):await l()}return w(()=>[a.node,a.block,a.overlook],o),x(o),f(t,o,{childList:!0,subtree:!0,characterData:!0}),u({typeset:l}),(n,T)=>(k(),p(i(c),null,{default:y(()=>[M("span",{ref_key:"raw",ref:t,class:"mathjax-raw"},[b(n.$slots,"default")],512),C(i(d),{ref_key:"formula",ref:e},null,512)]),_:3}))}});export{J as _};
