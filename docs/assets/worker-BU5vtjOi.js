var q=Object.defineProperty;var z=(u,a,f)=>a in u?q(u,a,{enumerable:!0,configurable:!0,writable:!0,value:f}):u[a]=f;var g=(u,a,f)=>z(u,typeof a!="symbol"?a+"":a,f);(function(){"use strict";function*u(i,e){const t=i.length,s=Array(e).fill(0);for(;;){yield s.map(r=>i[r]);let n=e-1;for(;n>=0&&(s[n]++,!(s[n]<t));)s[n]=0,n--;if(n<0)break}}const a={symbol:"",exponent:0},f=[{symbol:"Q",exponent:30},{symbol:"R",exponent:27},{symbol:"Y",exponent:24},{symbol:"Z",exponent:21},{symbol:"E",exponent:18},{symbol:"P",exponent:15},{symbol:"T",exponent:12},{symbol:"G",exponent:9},{symbol:"M",exponent:6},{symbol:"k",exponent:3},{symbol:"h",exponent:2},{symbol:"da",exponent:1},a,{symbol:"d",exponent:-1},{symbol:"c",exponent:-2},{symbol:"m",exponent:-3},{symbol:"μ",exponent:-6},{symbol:"u",exponent:-6},{symbol:"n",exponent:-9},{symbol:"p",exponent:-12},{symbol:"f",exponent:-15},{symbol:"a",exponent:-18},{symbol:"z",exponent:-21},{symbol:"y",exponent:-24},{symbol:"r",exponent:-27},{symbol:"q",exponent:-30}],l=class l{constructor(e,t){this.fraction=e,this.prefix=t}get actualValue(){return this.fraction*10**this.prefix.exponent}toString(){return`${this.fraction}${this.prefix.symbol}`}toSimpleString(e){return`${Number(this.fraction.toFixed(e))}${this.prefix.symbol}`}toFixed(e){return`${this.fraction.toFixed(e)}${this.prefix.symbol}`}static getPrefixSymbols(e){return f.filter(t=>t.exponent%(e?1:3)===0).map(t=>t.symbol)}static test(e){return l.siValuePattern.test(e??"")}static parse(e){const t=l.siValuePattern.exec(e??"");if(t==null)return new l(Number.NaN,a);const s=Number.parseFloat(t[1]),n=f.find(r=>r.symbol===t[2]);return n?new l(s,n):new l(s,a)}static fit(e,t){if(!Number.isFinite(e)&&t.length===0)return new l(e,a);if(e!==0){const s=Math.sign(e);e=Math.abs(e);const n=t.map(r=>{const o=l.getPrefix(r),p=e*10**-o.exponent,d=Math.abs(p-500);return{prefix:o,practicalValue:p,rank:d}}).sort((r,o)=>r.rank-o.rank);return new l(n[0].practicalValue*s,n[0].prefix)}else return new l(0,a)}static fitBy(e,t){if(!Number.isFinite(e))return new l(e,a);const s=Math.sign(e);e=Math.abs(e);const n=l.getPrefix(t),r=e*10**-n.exponent;return new l(r*s,n)}static getPrefix(e){const t=f.find(s=>s.symbol===e);if(!t)throw new Error(`Prefix symbol '${e}' is not defined.`);return t}static successor(e,t){const s=l.getPrefix(e),n=f.filter(o=>o.exponent>s.exponent&&o.exponent%(t?1:3)===0);if(n.length===0)return e;const r=n.slice(-1)[0];return n.filter(o=>o.exponent===r.exponent)[0].symbol}static predecessor(e,t){const s=l.getPrefix(e),n=f.filter(r=>r.exponent<s.exponent&&r.exponent%(t?1:3)===0);return n.length===0?e:n[0].symbol}};g(l,"siValuePattern",/^([+-]?(?:[0-9]*\.)?[0-9]+)([QRYZEPTGMkmuμnpfazyrq]?)$/);let k=l;function*x(i){i.length===1&&(yield[i[0]]);for(let e=1;e<i.length;e++){const t=i.slice(0,e),s=i.slice(e);for(const n of x(t))for(const r of x(s))yield["+",...n,...r];for(const n of x(s))for(const r of x(t))yield["|",...r,...n]}}function*I(i,e,t){for(let s=e;s<=t;s*=10)for(const n of i){const r=n*s/100;e<=r&&r<=t&&(yield r)}}function*S(i,e,t,s,n,r,o,p){o=o??[];const d=[...I(s,n,r)].filter(h=>h!==i&&!o.includes(h)).sort((h,y)=>Math.abs(h-i)-Math.abs(y-i)),w=Array.from({length:t},()=>({value:0})),N=[...x(w)],M=d.length**t*N.length;let P=0,m=0;for(const h of u(d,t)){h.forEach((y,b)=>{w[b].value=y});for(const y of N){const b=c.calcValue(y,e);m++,Math.abs(P-i)>=Math.abs(b-i)&&(P=b,yield{combination:new c(y),total:M,current:m}),p&&m%p===0&&(yield{total:M,current:m})}}}class c{constructor(e){g(this,"componentNodes");g(this,"nodes");this.componentNodes=structuredClone(e),this.nodes=c.generateSyntaxTree(e)}equals(e){return c.equalsInternal(this.nodes,e.nodes)}toString(e=["T","G","M","k","","m","μ","n","p","f"],t=3){return c.toStringInternal(this.nodes,e,t)}calcValue(e){return e==="capacitor"?c.calcValueForCapacitorInternal(this.componentNodes):c.calcValueInternal(this.componentNodes)}static calcValue(e,t){return t==="capacitor"?c.calcValueForCapacitorInternal(e):c.calcValueInternal(e)}static equalsInternal(e,t){if(e.type!==t.type||e.children.length!==t.children.length)return!1;const s=[...e.children].sort(c.compareNodes),n=[...t.children].sort(c.compareNodes);return s.every((r,o)=>c.deepCompare(r,n[o]))}static compareNodes(e,t){return e.type==="term"&&t.type==="term"?e.children-t.children:e.type==="term"?-1:t.type==="term"?1:e.type.localeCompare(t.type)}static deepCompare(e,t){return e.type!==t.type?!1:e.type==="term"&&t.type==="term"?e.children===t.children:e.type!=="term"&&t.type!=="term"?c.equalsInternal(e,t):!1}static generateSyntaxTree(e){const t=[];for(let s=e.length-1;s>=0;s--){const n=e[s],r=[];if(n==="+"){const o=t.pop(),p=t.pop();o.type==="series"?r.push(...o.children):r.push(o),p.type==="series"?r.push(...p.children):r.push(p),t.push({type:"series",children:r})}else if(n==="|"){const o=t.pop(),p=t.pop();o.type==="parallel"?r.push(...o.children):r.push(o),p.type==="parallel"?r.push(...p.children):r.push(p),t.push({type:"parallel",children:r})}else t.push({type:"term",children:n.value})}if(t[0].type!=="term")return t[0];throw new Error("invalid nodes")}static toStringInternal(e,t,s){return e.children.map(n=>n.type==="term"?k.fit(n.children,t).toSimpleString(s):`(${c.toStringInternal(n,t,s)})`).join(e.type==="series"?" + ":" | ")}static calcValueInternal(e){const t=[];for(let s=e.length-1;s>=0;s--){const n=e[s];if(n==="+"){const r=t.pop(),o=t.pop();t.push(r+o)}else if(n==="|"){const r=t.pop(),o=t.pop();t.push(r*o/(r+o))}else t.push(n.value)}return t[0]}static calcValueForCapacitorInternal(e){const t=[];for(let s=e.length-1;s>=0;s--){const n=e[s];if(n==="+"){const r=t.pop(),o=t.pop();t.push(r*o/(r+o))}else if(n==="|"){const r=t.pop(),o=t.pop();t.push(r+o)}else t.push(n.value)}return t[0]}}let V=null;self.addEventListener("message",i=>{switch(i.data.type){case"initialize":{self.postMessage(F(i.data));break}case"invoke":{self.postMessage($(i.data));break}}});function F(i){return V=S(i.value,i.componentType,i.componentNumber,i.series,i.minValue,i.maxValue,i.excludedValues,i.progressBeacon),console.info("[worker] initialized"),{type:"initialize"}}function $(i){var t;if(!V)return{type:"invoke",done:!1};const e=V.next();return{type:"invoke",done:e.done??!1,result:e.value?{componentNodes:(t=e.value.combination)==null?void 0:t.componentNodes,total:e.value.total,current:e.value.current}:void 0}}})();
