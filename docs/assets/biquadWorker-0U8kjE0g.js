var C=Object.defineProperty;var F=(R,w,p)=>w in R?C(R,w,{enumerable:!0,configurable:!0,writable:!0,value:p}):R[w]=p;var _=(R,w,p)=>F(R,typeof w!="symbol"?w+"":w,p);(function(){"use strict";function R(l,t){const n=l.length;if(n!=t.length)throw new RangeError("Mismatched lengths");n!=0&&(n&n-1?A(l,t):p(l,t))}function w(l,t){R(t,l)}function p(l,t){const n=l.length;if(n!=t.length)throw new RangeError("Mismatched lengths");if(n==1)return;let e=-1;for(let s=0;s<32;s++)1<<s==n&&(e=s);if(e==-1)throw new RangeError("Length is not a power of 2");const h=new Array(n/2),a=new Array(n/2);for(let s=0;s<n/2;s++)h[s]=Math.cos(2*Math.PI*s/n),a[s]=Math.sin(2*Math.PI*s/n);for(let s=0;s<n;s++){const o=M(s,e);if(o>s){let g=l[s];l[s]=l[o],l[o]=g,g=t[s],t[s]=t[o],t[o]=g}}for(let s=2;s<=n;s*=2){const o=s/2,g=n/s;for(let c=0;c<n;c+=s)for(let r=c,u=0;r<c+o;r++,u+=g){const q=r+o,y=l[q]*h[u]+t[q]*a[u],L=-l[q]*a[u]+t[q]*h[u];l[q]=l[r]-y,t[q]=t[r]-L,l[r]+=y,t[r]+=L}}function M(s,o){let g=0;for(let c=0;c<o;c++)g=g<<1|s&1,s>>>=1;return g}}function A(l,t){const n=l.length;if(n!=t.length)throw new RangeError("Mismatched lengths");let e=1;for(;e<n*2+1;)e*=2;const h=new Array(n),a=new Array(n);for(let u=0;u<n;u++){const q=u*u%(n*2);h[u]=Math.cos(Math.PI*q/n),a[u]=Math.sin(Math.PI*q/n)}const M=d(e),s=d(e);for(let u=0;u<n;u++)M[u]=l[u]*h[u]+t[u]*a[u],s[u]=-l[u]*a[u]+t[u]*h[u];const o=d(e),g=d(e);o[0]=h[0],g[0]=a[0];for(let u=1;u<n;u++)o[u]=o[e-u]=h[u],g[u]=g[e-u]=a[u];const c=new Array(e),r=new Array(e);I(M,s,o,g,c,r);for(let u=0;u<n;u++)l[u]=c[u]*h[u]+r[u]*a[u],t[u]=-c[u]*a[u]+r[u]*h[u]}function I(l,t,n,e,h,a){const M=l.length;if(M!=t.length||M!=n.length||M!=e.length||M!=h.length||M!=a.length)throw new RangeError("Mismatched lengths");l=l.slice(),t=t.slice(),n=n.slice(),e=e.slice(),R(l,t),R(n,e);for(let s=0;s<M;s++){const o=l[s]*n[s]-t[s]*e[s];t[s]=t[s]*n[s]+l[s]*e[s],l[s]=o}w(l,t);for(let s=0;s<M;s++)h[s]=l[s]/M,a[s]=t[s]/M}function d(l){const t=[];for(let n=0;n<l;n++)t.push(0);return t}class i{constructor(t){_(this,"_coefficients",new Float64Array(6));_(this,"_normalizedCoefficients",new Float64Array(5));_(this,"_impluseResponse");_(this,"_real");_(this,"_imag");_(this,"_phaseResponse");_(this,"_frequencyResponse");this.impulseLength=t,this._impluseResponse=new Float64Array(this.impulseLength),this._real=new Float64Array(this.impulseLength),this._imag=new Float64Array(this.impulseLength),this._phaseResponse=new Float64Array(this.impulseLength/2),this._frequencyResponse=new Float64Array(this.impulseLength/2)}setFilter(t,n,e,h){i[t](this._coefficients,n,e,h),i.normalizeCoefficients(this._coefficients,this._normalizedCoefficients),i.calcImpulseResponse(this._impluseResponse,this._normalizedCoefficients)}transform(){for(let t=0;t<this.impulseLength;t++)this._real[t]=this._impluseResponse[t],this._imag[t]=0;R(this._real,this._imag);for(let t=0;t<this.impulseLength/2;t++)this._phaseResponse[t]=Math.atan2(this._imag[t],this._real[t])*180/Math.PI,this._frequencyResponse[t]=Math.log10(Math.sqrt(this._real[t]*this._real[t]+this._imag[t]*this._imag[t]))*20}get coefficients(){return this._coefficients}get normalizedCoefficients(){return this._normalizedCoefficients}get impluseResponse(){return this._impluseResponse}get phaseResponse(){return this._phaseResponse}get frequencyResponse(){return this._frequencyResponse}static normalizeCoefficients(t,n){const e=n??new Float64Array(5);return e[0]=t[0]/t[3],e[1]=t[1]/t[3],e[2]=t[2]/t[3],e[3]=-t[4]/t[3],e[4]=-t[5]/t[3],e}static calcImpulseResponse(t,n){if(n.length!==5)throw new Error("Coefficients must to be normalized.");let[e,h,a,M,s]=[0,0,1,0,0];for(let o=0;o<t.length;o++)t[o]=n[0]*a+n[1]*M+n[2]*s+n[3]*e+n[4]*h,s=M,M=a,h=e,e=t[o],a=0}static calcOmega(t,n){return 2*Math.PI*n/t}static lowpass(t,n,e,h){const a=(h==null?void 0:h.q)??Math.SQRT1_2,M=i.calcOmega(n,e),s=Math.sin(M)/(2*a);return t[0]=(1-Math.cos(M))/2,t[1]=1-Math.cos(M),t[2]=(1-Math.cos(M))/2,t[3]=1+s,t[4]=-2*Math.cos(M),t[5]=1-s,t}static highpass(t,n,e,h){const a=(h==null?void 0:h.q)??Math.SQRT1_2,M=i.calcOmega(n,e),s=Math.sin(M)/(2*a);return t[0]=(1+Math.cos(M))/2,t[1]=-(1+Math.cos(M)),t[2]=(1+Math.cos(M))/2,t[3]=1+s,t[4]=-2*Math.cos(M),t[5]=1-s,t}static bandpass(t,n,e,h){const a=(h==null?void 0:h.q)??Math.SQRT1_2,M=i.calcOmega(n,e),s=Math.sin(M)/(2*a);return t[0]=s,t[1]=0,t[2]=-s,t[3]=1+s,t[4]=-2*Math.cos(M),t[5]=1-s,t}static bandstop(t,n,e,h){const a=(h==null?void 0:h.q)??Math.SQRT1_2,M=i.calcOmega(n,e),s=Math.sin(M)/(2*a);return t[0]=1,t[1]=-2*Math.cos(M),t[2]=1,t[3]=1+s,t[4]=-2*Math.cos(M),t[5]=1-s,t}static lowshelf(t,n,e,h){const a=(h==null?void 0:h.gain)??0,M=(h==null?void 0:h.q)??Math.SQRT1_2,s=i.calcOmega(n,e),o=Math.pow(10,a/40),g=Math.sqrt(o)/M;return t[0]=o*(o+1-(o-1)*Math.cos(s)+g*Math.sin(s)),t[1]=2*o*(o-1-(o+1)*Math.cos(s)),t[2]=o*(o+1-(o-1)*Math.cos(s)-g*Math.sin(s)),t[3]=o+1+(o-1)*Math.cos(s)+g*Math.sin(s),t[4]=-2*(o-1+(o+1)*Math.cos(s)),t[5]=o+1+(o-1)*Math.cos(s)-g*Math.sin(s),t}static highshelf(t,n,e,h){const a=(h==null?void 0:h.gain)??0,M=(h==null?void 0:h.q)??Math.SQRT1_2,s=i.calcOmega(n,e),o=Math.pow(10,a/40),g=Math.sqrt(o)/M;return t[0]=o*(o+1+(o-1)*Math.cos(s)+g*Math.sin(s)),t[1]=-2*o*(o-1+(o+1)*Math.cos(s)),t[2]=o*(o+1+(o-1)*Math.cos(s)-g*Math.sin(s)),t[3]=o+1-(o-1)*Math.cos(s)+g*Math.sin(s),t[4]=2*(o-1-(o+1)*Math.cos(s)),t[5]=o+1-(o-1)*Math.cos(s)-g*Math.sin(s),t}static peaking(t,n,e,h){const a=(h==null?void 0:h.gain)??0,M=(h==null?void 0:h.q)??Math.SQRT1_2,s=i.calcOmega(n,e),o=Math.sin(s)/(2*M),g=Math.pow(10,a/40);return t[0]=1+o*g,t[1]=-2*Math.cos(s),t[2]=1-o*g,t[3]=1+o/g,t[4]=-2*Math.cos(s),t[5]=1-o/g,t}static allpass(t,n,e,h){const a=(h==null?void 0:h.q)??Math.SQRT1_2,M=i.calcOmega(n,e),s=Math.sin(M)/(2*a);return t[0]=1-s,t[1]=-2*Math.cos(M),t[2]=1+s,t[3]=1+s,t[4]=-2*Math.cos(M),t[5]=1-s,t}}function T(l){let t=-1/0,n=1/0,e=-1,h=-1,a=0;for(const M of l)M>t&&(t=M,e=a),M<n&&(n=M,h=a),a++;return{max:t,min:n,maxIndex:e,minIndex:h}}self.addEventListener("message",l=>{console.info(`[biquadWorker] start impulseLength: ${l.data.impulseLength}`);const t=b(l.data);console.info(`[biquadWorker] finish impulseLength: ${l.data.impulseLength}`),self.postMessage(t)});function b(l){const t=new i(l.impulseLength);t.setFilter(l.filterType,l.samplingFreq,l.cutoffFreq,{q:l.q,gain:l.gain}),t.transform();const n=T(t.frequencyResponse);return{magnitudeOnCutoff:(t.frequencyResponse[Math.floor(l.cutoffFreq/l.samplingFreq*l.impulseLength)]+t.frequencyResponse[Math.floor(l.cutoffFreq/l.samplingFreq*l.impulseLength+1)])/2,maxMagnitude:n.max,minMagnitude:n.min,maxMagnitudeFrequency:l.samplingFreq/l.impulseLength*n.maxIndex,minMagnitudeFrequency:l.samplingFreq/l.impulseLength*n.minIndex,sumImpulse:t.impluseResponse.reduce((e,h)=>e+h,0)}}})();
